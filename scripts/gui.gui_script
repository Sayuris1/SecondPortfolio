local dtypewriter = require "dtypewriter.dtypewriter"

function init(self)
	gui.set_enabled(gui.get_node("hold"), false)
	gui.set_enabled(gui.get_node("go_on"), false)
	msg.post("/arrow", "disable")

	self.is_go_on_enabled = false
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("base_full") then
		gui.set_enabled(gui.get_node("hold"), true)

		gui.set_enabled(gui.get_node("go_on"),false)
		gui.set_enabled(gui.get_node("go_on"), false)
		msg.post("/arrow", "enable")
	elseif message_id == hash("arrow_full") then
		msg.post("/arrow", "start_state_end")

	elseif message_id == hash("particle_collected") then
		if self.is_go_on_enabled then
			return
		end

		gui.set_enabled(gui.get_node("go_on"), true)
		self.is_go_on_enabled = true;

		gui.set_enabled(gui.get_node("move"),false)
		gui.set_enabled(gui.get_node("move1"),false)

	elseif message_id == hash("start_state_end") then
		gui.set_enabled(gui.get_node("hold"), false)
	end
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
